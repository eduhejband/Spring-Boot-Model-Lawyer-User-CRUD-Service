version: '3.8'

services:
  servico_1:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/servico_1_db
      SPRING_DATASOURCE_USERNAME: banco
      SPRING_DATASOURCE_PASSWORD: "123"
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
    networks:
      - app-network

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: banco
      POSTGRES_PASSWORD: "123"
      POSTGRES_DB: servico_1_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "PGPASSWORD=123 pg_isready -U banco -d servico_1_db"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "5433:5432"
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_ERLANG_COOKIE: "SECRETCOOKIE"
      RABBITMQ_NODENAME: "rabbit@rabbitmq"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "check_running"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    ports:
      - "5673:5672"
      - "15673:15672"
    networks:
      - app-network

volumes:
  postgres_data:
  rabbitmq_data:

networks:
  app-network:
    driver: bridge